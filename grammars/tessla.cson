'scopeName': 'tessla'
'name': 'TeSSLa'
'fileTypes': [
  'tessla'
]
'patterns': [
  {
    'comment': 'In-line comments'
    'match': '\\s*(#|--).*'
    'name': 'comment.line.double-dash'
  },
  {
    'comment': 'Strings'
    'match': '"[^"]*"'
    'name': 'punctuation.string'
  },
  {
    'comment': 'Keywords'
    'match': '\\b(if|then|else|include|where)\\b'
    'name': 'keyword.control'
  },
  {
    'comment': 'Other keywords'
    'match': '\\b(in|out|def|define)\\s+(\\w[\\w\\d_]*)?'
    'captures':
      1:
        'name': 'keyword.other'
      2:
        'name': 'variable.other'
  },
  {
    'comment': 'param type'
    'match': '\\b(\\w[\\w\\d_]*)\\s*:\\s*(?!=)'
    'name': 'variable.parameter'
  },
  {
    'comment': 'Datatypes'
    'match': '\\b(Signal|Events|Int|Float|String|Boolean|Bool|Unit)\\b'
    'name': 'storage.type'
  },
  {
    'comment': 'Library functions'
    'match': '\\b(code_line_exec|function_call|function_return)\\b'
    'name': 'support.function'
  },
  {
    'comment': 'Language constants'
    'match': '\\b(true|false)\\b'
    'name': 'constant.language'
  },
  {
    'comment': 'Assignment operator'
    'match': ':='
    'name': 'keyword.operator.assignment'
  },
  {
    'comment': 'Arithmetic operators'
    'match': '\\b(\\+|-|\\^|\\*|\\/|&|\\|<<|>>)\\b'
    'name': 'keyword.operator'
  },
  {
    'comment': 'Comparison operator'
    'match': '\\b(<|>|!=|==|>=|<=|\\|\\||&&)\\b'
    'name': 'keyword.operator.comparison'
  },
  {
    'comment': 'Comparison operator'
    'match': '\\b(!|~)\\b'
    'name': 'keyword.operator.unary'
  },
  {
    'comment': 'Numbers'
    'match': '((?:\\b\\d*\\.?\\d+(?:e[+-]\\d+)?|(?:x[0123456789abcdefABCDEF]+)|(?:b[01]+)|(?:o[01234567]+)\\b))'
    'name': 'constant.numeric'
  },
  {
    'comment': 'Numbers'
    'match': '@(\\w[\\w\\d_]*)'
    'name': 'keyword.other'
  }
]
